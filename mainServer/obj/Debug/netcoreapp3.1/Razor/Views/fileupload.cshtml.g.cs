#pragma checksum "C:\WebAPIProjects\MediShare\mainServer\Views\fileupload.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "cacd0f572f8fecc9dba29ec07eaf50112f6ca41b"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_fileupload), @"mvc.1.0.view", @"/Views/fileupload.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"cacd0f572f8fecc9dba29ec07eaf50112f6ca41b", @"/Views/fileupload.cshtml")]
    public class Views_fileupload : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral(@"<form action=""BufferedSingleFileUploadPhysical/?handler=Upload"" 
      enctype=""multipart/form-data"" onsubmit=""AJAXSubmit(this);return false;"" 
      method=""post"">
    <dl>
        <dt>
            <label for=""FileUpload_FormFile"">File</label>
        </dt>
        <dd>
            <input id=""FileUpload_FormFile"" type=""file"" 
                name=""FileUpload.FormFile"" />
        </dd>
    </dl>

    <input class=""btn"" type=""submit"" value=""Upload"" />

    <div style=""margin-top:15px"">
        <output name=""result""></output>
    </div>
</form>

<script>
  async function AJAXSubmit (oFormElement) {
    var resultElement = oFormElement.elements.namedItem(""result"");
    const formData = new FormData(oFormElement);

    try {
    const response = await fetch(oFormElement.action, {
      method: 'POST',
      body: formData
    });

    if (response.ok) {
      window.location.href = '/';
    }

    resultElement.value = 'Result: ' + response.status + ' ' + 
      response.status");
            WriteLiteral("Text;\r\n    } catch (error) {\r\n      console.error(\'Error:\', error);\r\n    }\r\n  }\r\n</script>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
